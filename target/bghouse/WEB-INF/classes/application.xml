<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 注解扫描 -->
    <context:component-scan base-package="com.supyp.bghouse"/>

    <!-- 开启SpringMVC注解支持
     解决@ResponseBody返回中文乱码问题
     -->
    <mvc:annotation-driven>
        <!-- 消息转换器,解决@ResponseBody返回中文乱码问题 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!-- springmvc 提供的拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/admin/**"/>
            <mvc:mapping path="/home/**"/>
            <mvc:exclude-mapping path="/home/account/login"/>
            <mvc:exclude-mapping path="/home/account/register"/>
            <mvc:exclude-mapping path="/home/room/**"/>
            <bean class="com.supyp.bghouse.interceptor.TokenInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/admin/**"/>
            <mvc:exclude-mapping path="/admin/authority/findTopList"/>
            <mvc:exclude-mapping path="/admin/role/findMyRoleName"/>
            <bean class="com.supyp.bghouse.interceptor.PermissionInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <mvc:cors>
        <mvc:mapping path="/**"
                     allowed-origins="http://localhost:8010,http://localhost:3000,http://localhost:8000"
                     allowed-methods="GET,POST,PUT,POST,DELETE"
                     allow-credentials="true"
                     allowed-headers="token"
                     max-age="3600" />
    </mvc:cors>

    <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--最大上传大小，单位：字节(B)-->
        <property name="maxUploadSize" value="10485760" />
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>


    <!-- 试图解析器 -->
    <!--
    @RequestMapping("/user")
    public class UserController {
        @GetMapping("login")
        public String login(){
            return "login";
        }
    }
    return "login";会寻找login.jsp，如何寻找，就是下面我们配置的内容
    -->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 静态资源服务器
     访问/images/xxx就会跑到webapp/images
     -->
    <mvc:resources location="/images/" mapping="/images/**" />



    <!-- 【【【spring 整合 mybatis】】】-->

    <!-- 加载properties文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>
    <!-- 数据库连接池: 推荐使用阿里巴巴的druid -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
    </bean>
    <!-- 配置sqlSessionFactory工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            <!-- 这里设定你的数据库类型 -->
                            helperDialect=mysql
                            <!--分页合理化参数，设置为true时，pageNum<=0时会查询第一页,pageNum>pages(超过总数时),会查询最后一页。-->
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <!-- 扫描接口: 改为通用mapper -->
    <bean id="mapperScanner" class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.supyp.bghouse.dao"/>
    </bean>


    <!-- JackSON-->
    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"></bean>

    <!-- JWTUtils -->
    <!--<bean id="jwtUtil" class="com.supyp.bghouse.utils.JWTUtil"></bean>-->

    <!-- 定时任务框架 -->
    <!--<bean id="jobDetail1" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">-->
        <!--<property name="jobClass" value="com.supyp.bghouse.job.MyJob"></property>-->
        <!--<property name="group" value="group1"></property>-->
        <!--<property name="name" value="myjob1"></property>-->
    <!--</bean>-->
    <!--<bean id="trigger1" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">-->
        <!--<property name="jobDetail" ref="jobDetail1"></property>-->
        <!--<property name="group" value="group1"></property>-->
        <!--<property name="name" value="trigger1"></property>-->
        <!--<property name="repeatInterval" value="5000"></property>-->
    <!--</bean>-->

    <!--<bean id="myJob2" class="com.supyp.bghouse.job.MyJob2"></bean>-->
    <!--<bean id="jobDetail2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="group" value="group1"></property>-->
        <!--<property name="name" value="myjob2"></property>-->
        <!--<property name="targetObject" ref="myJob2"></property>-->
        <!--<property name="targetMethod" value="execute"></property>-->
    <!--</bean>-->
    <!--<bean id="trigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->
        <!--<property name="jobDetail" ref="jobDetail2"></property>-->
        <!--<property name="group" value="group1"></property>-->
        <!--<property name="name" value="trigger2"></property>-->
        <!--<property name="cronExpression" value="0/5 * * * * ?"></property>-->
    <!--</bean>-->

    <!--<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
        <!--<property name="triggers">-->
            <!--<list>-->
                <!--<ref bean="trigger1"></ref>-->
                <!--<ref bean="trigger2"></ref>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
</beans>